// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`memory getSourceFrom should return correct source 1`] = `
[
  JMP, START, ADD, AL, 01, MOV, BL, [CL], END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
]
`;

exports[`memory getSourceFrom with DB should display number 1`] = `
[
  A0, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
]
`;

exports[`memory getSourceFrom with DB should split string 1`] = `
[
  H, e, l, l, o, ,,  , w, o, r, l, d, !, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
  , , , , , , , , , , , , , , , ,
]
`;

exports[`memory getVduDataFrom should return the VDU data 1`] = `
[
  20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
  20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
  20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
  20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
]
`;
